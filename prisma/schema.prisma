generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Indicator {
  id          String      @id @unique
  label       String
  description String?
  source      String
  unit        String?
  dataset     String?
  absolute    Boolean
  unitSymbol  String?
  showChart   Boolean     @default(true)
  precision   Int         @default(0)
  hidden      Boolean     @default(false)
  tags        String[]
  searchTags  String[]
  ranking     Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  values      Value[]
  Bookmark    Bookmark[]
  relatedTo   Indicator[] @relation("indicatorRelation")
  relatedIn   Indicator[] @relation("indicatorRelation")

  @@index([label(sort: Asc)])
  @@index([id(sort: Asc)])
  @@index([label, searchTags, hidden])
}

model Value {
  id          Int        @id @default(autoincrement())
  value       Float
  country     Country    @relation(fields: [countryId], references: [id])
  year        Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  indicator   Indicator? @relation(fields: [indicatorId], references: [id])
  indicatorId String?
  countryId   String

  @@index([year(sort: Desc)])
  @@index([countryId(sort: Asc)])
  @@index([indicatorId(sort: Asc)])
}

model Country {
  id                        String     @id @unique
  name                      String
  geoCode                   String?    @unique
  iso2Code                  String?
  hidden                    Boolean    @default(false)
  mapping                   Json?
  createdAt                 DateTime   @default(now())
  updatedAt                 DateTime   @updatedAt
  country                   Boolean    @default(false)
  independentState          Boolean    @default(true)
  union                     Boolean    @default(false)
  internationallyRecognized Boolean    @default(true)
  geographicRegion          Boolean    @default(false)
  searchTags                String[]
  values                    Value[]
  Bookmark                  Bookmark[]

  @@index([name(sort: Asc)])
  @@index([id(sort: Asc)])
}

model Bookmark {
  id          Int       @id @default(autoincrement())
  country     Country?  @relation(fields: [countryId], references: [id])
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  client      String
  countryId   String?
  indicatorId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([createdAt(sort: Desc)])
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
