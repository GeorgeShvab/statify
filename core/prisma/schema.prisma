generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Indicator {
  id                   String                 @id @unique
  absolute             Boolean
  unitSymbol           String?
  showChart            Boolean                @default(true)
  precision            Int                    @default(0)
  hidden               Boolean                @default(false)
  tags                 String[]
  searchTags           String[]
  ranking              Int                    @default(0)
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  values               Value[]
  Bookmark             Bookmark[]
  relatedTo            Indicator[]            @relation("indicatorRelation")
  relatedIn            Indicator[]            @relation("indicatorRelation")
  IndicatorTranslation IndicatorTranslation[]

  @@index([id(sort: Asc)])
}

model Value {
  id          Int       @id @default(autoincrement())
  value       Float
  country     Country   @relation(fields: [countryId], references: [id])
  year        Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  indicatorId String
  countryId   String

  @@index([year(sort: Desc)])
  @@index([countryId(sort: Asc)])
  @@index([indicatorId(sort: Asc)])
}

enum AreaType {
  region
  union
  country
  other
}

model Country {
  id                        String               @id @unique
  geoCode                   String?              @unique
  iso2Code                  String?
  hidden                    Boolean              @default(false)
  mapping                   Json?
  createdAt                 DateTime             @default(now())
  updatedAt                 DateTime             @updatedAt
  independentState          Boolean              @default(true)
  internationallyRecognized Boolean              @default(true)
  searchTags                String[]
  type                      AreaType?
  values                    Value[]
  Bookmark                  Bookmark[]
  CountryTranslation        CountryTranslation[]

  @@index([id(sort: Asc)])
}

model Bookmark {
  id          Int       @id @default(autoincrement())
  country     Country?  @relation(fields: [countryId], references: [id])
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  client      String
  countryId   String?
  indicatorId String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([createdAt(sort: Desc)])
}

enum Role {
  USER
  ADMIN
}

model User {
  id        Int      @id @default(autoincrement())
  username  String
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Language {
  uk
  en
}

model IndicatorTranslation {
  language    Language
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  label       String
  description String?
  source      String
  unit        String?
  dataset     String?
  indicatorId String

  @@id([indicatorId, language])
}

model CountryTranslation {
  language  Language
  country   Country  @relation(fields: [countryId], references: [id])
  name      String
  countryId String

  @@id([countryId, language])
}
